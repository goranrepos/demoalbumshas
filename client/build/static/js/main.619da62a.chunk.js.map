{"version":3,"sources":["reducers/album.js","reducers/artist.js","reducers/index.js","actions/types.js","store.js","actions/album.js","useSearchAlbum.js","FilterForm.js","AlbumTable.js","Albums.js","actions/artist.js","AlbumForm2.js","ArtistForm.js","App.js","index.js"],"names":["initialState","album","albums","hasMore","error","artist","loading_albums","loading_album","loading_artists","loading_artist","artists","combineReducers","state","action","type","payload","results","next","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","getAlbums","pageNumber","pageLimit","query","CancelToken","dispatch","a","axios","method","url","params","page","limit","cancelToken","res","data","console","log","response","isCancel","msg","statusText","status","useSearchAlbum","useDispatch","useEffect","cancel","c","connect","state_artist","resetPageNumber","useState","setQuery","htmlFor","placeholder","name","value","onChange","e","target","length","map","index","key","_id","album_title","condition","year","to","setPageNumber","onClick","getArtists","artist_name","state_album","getAlbumById","album_id","updateAlbum","formData","history","push","match","setFormData","fetchAlbumById","useCallback","id","albumData","fetchArtists","onSubmit","preventDefault","artist_id","new_artist_name","updateArtist","required","App","exact","path","component","AlbumForm2","ArtistForm","Albums","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.619da62a.chunk.js","sourcesContent":["import {\n  CLEAR_ALBUMS,\n  GET_ALBUMS,\n  ALBUMS_ERROR,\n  CLEAR_ALBUM,\n  GET_ALBUM,\n  ALBUM_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  album: null,\n  albums: [],\n  hasMore: false,\n  error: {},\n  artist: null,\n  loading_albums: true,\n  loading_album: true,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CLEAR_ALBUMS:\n      return {\n        ...state,\n        albums: [],\n        loading_albums: true,\n        error: {},\n      };\n    case GET_ALBUMS:\n      return {\n        ...state,\n        albums: payload.results,\n        loading_albums: false,\n        hasMore: payload.next ? true : false,\n      };\n    case ALBUMS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading_albums: false,\n        albums: [],\n      };\n    case CLEAR_ALBUM:\n      return {\n        ...state,\n        album: null,\n        loading_album: true,\n        error: {},\n      };\n    case GET_ALBUM:\n      return {\n        ...state,\n        album: payload,\n        loading_album: false,\n      };\n    case ALBUM_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading_album: false,\n        album: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  CLEAR_ARTISTS,\n  GET_ARTISTS,\n  ARTISTS_ERROR,\n  CLEAR_ARTIST,\n  GET_ARTIST,\n  ARTIST_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  loading_artists: true,\n  loading_artist: true,\n  artist: null,\n  artists: [],\n  hasMore: false,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CLEAR_ARTISTS:\n      return {\n        ...state,\n        artists: [],\n        loading_artists: true,\n        error: {},\n      };\n    case GET_ARTISTS:\n      return {\n        ...state,\n        artists: payload.results,\n        loading_artists: false,\n        hasMore: payload.next ? true : false,\n      };\n    case ARTISTS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading_artists: false,\n        artists: [],\n      };\n    case CLEAR_ARTIST:\n      return {\n        ...state,\n        artist: null,\n        loading_artist: true,\n        error: {},\n      };\n    case GET_ARTIST:\n      return {\n        ...state,\n        artist: payload,\n        loading_artist: false,\n      };\n    case ARTIST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading_artist: false,\n        artist: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport album from './album';\nimport artist from './artist';\n\nexport default combineReducers({\n  album,\n  artist,\n});\n","export const CLEAR_ALBUMS = 'CLEAR_ALBUMS';\nexport const GET_ALBUMS = 'GET_ALBUMS';\nexport const ALBUMS_ERROR = 'ALBUM_ERROR';\nexport const CLEAR_ALBUM = 'CLEAR_ALBUM';\nexport const GET_ALBUM = 'GET_ALBUM';\nexport const UPDATE_ALBUM = 'UPDATE_ALBUM';\nexport const ALBUM_ERROR = 'ALBUM_ERROR';\nexport const CLEAR_ARTISTS = 'CLEAR_ARTISTS';\nexport const GET_ARTISTS = 'GET_ARTISTS';\nexport const ARTISTS_ERROR = 'ARTIST_ERROR';\nexport const CLEAR_ARTIST = 'CLEAR_ARTIST';\nexport const ARTIST_ERROR = 'ARTIST_ERROR';\nexport const GET_ARTIST = 'GET_ARTIST';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// set up a store subscription listener\n// to store the users token in localStorage\n\n// initialize current state from redux store for subscription comparison\n// preventing undefined error\n////let currentState = store.getState();\n\nstore.subscribe(() => {\n  // keep track of the previous and current state to compare changes\n  ////let previousState = currentState;\n  ////currentState = store.getState();\n});\n\nexport default store;\n","import {\n  GET_ALBUMS,\n  ALBUM_ERROR,\n  GET_ALBUM,\n  //GET_ARTIST,\n  //GET_ARTISTS,\n  //ARTIST_ERROR,\n  CLEAR_ALBUM,\n  CLEAR_ALBUMS,\n} from './types';\nimport axios from 'axios';\n\n// Get all albums\nexport const getAlbums = (pageNumber, pageLimit, query, CancelToken) => async (\n  dispatch\n) => {\n  dispatch({\n    type: CLEAR_ALBUMS,\n  });\n  dispatch({\n    type: CLEAR_ALBUM,\n  });\n  //console.log('getAlbums', pageNumber, pageLimit, query, cancel, CancelToken);\n  try {\n    let res = await axios({\n      method: 'GET',\n      url: '/api/album',\n      params: { page: pageNumber, limit: pageLimit, query: query },\n      //create cancelToken by passing an executor func that receives the 'let cancel' func as param\n      cancelToken: CancelToken,\n    });\n    //console.log('Action:getAlbums:', res.data);\n\n    dispatch({\n      type: GET_ALBUMS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err.response);\n    if (axios.isCancel(err)) return;\n    dispatch({\n      type: ALBUM_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get album by Id\nexport const getAlbumById = (album_id) => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ALBUM,\n  });\n  try {\n    let res = await axios({\n      method: 'GET',\n      url: `/api/album/${album_id}`,\n    });\n    //console.log('getAlbumById:res', res.data);\n\n    //const res = await api.get(`/album/${album_id}`);\n\n    dispatch({\n      type: GET_ALBUM,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ALBUM_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Create or Update Album\nexport const updateAlbum = (\n  album_id,\n  formData,\n  history,\n  edit = false\n) => async (dispatch) => {\n  try {\n    //console.log('updatelbum', history);\n    let res = await axios({\n      method: 'put',\n      url: `/api/album/${album_id}`,\n      data: { ...formData },\n    });\n\n    dispatch({\n      type: GET_ALBUM,\n      payload: res.data,\n    });\n    history.push('/');\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ALBUM_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAlbums } from './actions/album';\nimport axios from 'axios';\n\nconst useSearchAlbum = (query, pageNumber, pageLimit) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //console.log('FilterForm:useEffect', query, pageNumber, pageLimit);\n    let cancel; //cancel func\n    var CancelToken = new axios.CancelToken((c) => (cancel = c));\n    dispatch(getAlbums(pageNumber, pageLimit, query, CancelToken));\n    return () => cancel();\n  }, [pageNumber, pageLimit, query, dispatch]);\n\n  return null;\n};\n\nexport default useSearchAlbum;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getAlbums } from './actions/album';\nimport useSearchAlbum from './useSearchAlbum';\n\nconst FilterForm = ({ getAlbums, pageNumber, pageLimit, resetPageNumber }) => {\n  const [query, setQuery] = useState('');\n\n  useSearchAlbum(query, pageNumber, pageLimit);\n\n  const onChange = (e) => {\n    resetPageNumber();\n    setQuery(e.target.value);\n  };\n\n  return (\n    <Fragment>\n      <form>\n        <div>\n          <label htmlFor='query'>Search</label>\n          <input\n            type='text'\n            placeholder='Search Album'\n            name='query'\n            value={query}\n            onChange={onChange}\n          />\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  album: state.album,\n  state_artist: state.artist,\n});\n\nexport default connect(mapStateToProps, { getAlbums })(FilterForm);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst AlbumTable = ({ albums, loading_albums }) => {\n  return (\n    <Fragment>\n      {albums.length > 0 ? (\n        <Fragment>\n          <table>\n            <thead>\n              <tr>\n                <th>Album</th>\n                <th>Condition</th>\n                <th>Year</th>\n                <th>Artist</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {albums.map((album, index) => {\n                return (\n                  <tr key={album._id}>\n                    <td>{album.album_title}</td>\n                    <td>{album.condition}</td>\n                    <td>{album.year}</td>\n                    <td>{album.artist.name}</td>\n                    <td>\n                      <Link to={`/edit-album/${album._id}`}>\n                        Edit Album Details\n                      </Link>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </Fragment>\n      ) : (\n        <h4>No albums found...</h4>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  album: state.album,\n  state_artist: state.artist,\n});\n\nexport default connect(mapStateToProps, null)(AlbumTable);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getAlbums } from './actions/album';\nimport { Link } from 'react-router-dom';\nimport FilterForm from './FilterForm';\nimport AlbumTable from './AlbumTable';\n\nconst Albums = ({\n  getAlbums,\n  album: { albums, loading_albums, error, hasMore },\n}) => {\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageLimit, setPageLimit] = useState(3);\n\n  function handleNext(e) {\n    //setQuery(e.target.value);\n    setPageNumber(pageNumber + 1);\n  }\n\n  function handlePrev(e) {\n    //setQuery(e.target.value);\n    setPageNumber(pageNumber - 1);\n  }\n\n  const resetPageNumber = () => {\n    setPageNumber(1);\n  };\n\n  //console.log('Album', hasMore);\n\n  return (\n    <Fragment>\n      <FilterForm\n        pageNumber={pageNumber}\n        pageLimit={pageLimit}\n        resetPageNumber={resetPageNumber}\n      />\n      {loading_albums ? (\n        <p>Loading albums...</p>\n      ) : (\n        <Fragment>\n          {albums.length > 0 ? (\n            <Fragment>\n              <p>\n                Found {albums.length} result{albums.length > 1 ? 's' : ''}\n              </p>\n              <AlbumTable albums={albums} loading_albums={loading_albums} />\n              {pageNumber > 1 && (\n                <button onClick={handlePrev}>Show prev albums</button>\n              )}\n              {hasMore && (\n                <button onClick={handleNext}>Show next albums</button>\n              )}\n              <div>PageNumber {pageNumber}</div>\n            </Fragment>\n          ) : (\n            <h4>No albums found...</h4>\n          )}\n          <div>\n            <Link to={`/edit-album/`}>Add new Album</Link>\n            <Link to={`/edit-artist/`}>Update Artist Names</Link>\n          </div>\n        </Fragment>\n      )}\n      {/* \n        <Fragment>\n          {albums.length > 0 ? (\n            <Fragment>\n              <div>PageNumber {pageNumber}</div>\n\n              \n              {pageNumber > 1 && (\n                <button onClick={handlePrev}>Show prev albums</button>\n              )}\n              {hasMore && (\n                <button onClick={handleNext}>Show next albums</button>\n              )}\n              <div>PageNumber {pageNumber}</div>\n              <div>\n                <Link to={`/edit-album/`}>Add new Album</Link>\n                <Link to={`/edit-artist/`}>Update Artist Names</Link>\n              </div>\n            </Fragment>\n          ) : (\n            <h4>No albums found...</h4>\n          )}\n        </Fragment>\n      )} */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  album: state.album,\n  state_artist: state.artist,\n});\n\nexport default connect(mapStateToProps, { getAlbums })(Albums);\n","import {\n  GET_ARTIST,\n  GET_ARTISTS,\n  ARTIST_ERROR,\n  CLEAR_ARTISTS,\n  CLEAR_ARTIST,\n  ARTISTS_ERROR,\n} from './types';\nimport axios from 'axios';\n\n// Get all artists\nexport const getArtists = (pageNumber, pageLimit) => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ARTISTS,\n  });\n  dispatch({\n    type: CLEAR_ARTIST,\n  });\n  try {\n    //let cancel; //cancel func\n    let res = await axios({\n      method: 'GET',\n      url: '/api/artist',\n      params: { page: pageNumber, limit: pageLimit },\n      //create cancelToken by passing an executor func that receives the 'let cancel' func as param\n      //cancelToken: new axios.CancelToken((c) => (cancel = c)),\n    });\n    //console.log('Action:getArtists:', res.data);\n\n    dispatch({\n      type: GET_ARTISTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err.response);\n    if (axios.isCancel(err)) return;\n    dispatch({\n      type: ARTISTS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get album by Id\nexport const getArtistById = (artist_id) => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ARTIST,\n  });\n  try {\n    let res = await axios({\n      method: 'GET',\n      url: `/api/artist/${artist_id}`,\n    });\n    console.log('Action:getArtistById:res');\n    console.log(res.data);\n\n    //const res = await api.get(`/album/${album_id}`);\n\n    dispatch({\n      type: GET_ARTIST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ARTIST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Create or Update Artist\nexport const updateArtist = (\n  artist_id,\n  formData,\n  history,\n  edit = false\n) => async (dispatch) => {\n  try {\n    console.log('updateArtist', history);\n    let res = await axios({\n      method: 'put',\n      url: `/api/artist/${artist_id}`,\n      data: { name: formData.new_artist_name },\n    });\n\n    dispatch({\n      type: GET_ARTIST,\n      payload: res.data,\n    });\n    history.push('/');\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ARTIST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import React, { useEffect, useState, Fragment, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { getAlbumById, updateAlbum } from './actions/album';\nimport { getArtists } from './actions/artist';\nimport { Link } from 'react-router-dom';\n\nconst initialState = {\n  condition: '',\n  album_title: '',\n  year: '',\n  artist_name: '',\n};\n\nconst AlbumForm2 = ({\n  getAlbumById,\n  updateAlbum,\n  getArtists,\n  state_album: { loading_album, album },\n  state_artist: { loading_artists, artists },\n  match,\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const fetchAlbumById = useCallback(() => {\n    //console.log('fetchAlbumbyId');\n    if (!album) getAlbumById(match.params.id);\n    if (!loading_album && album && album.artist && album.artist.name) {\n      // console.log('AlbumForm2:useEffect:album:if:', album, loading_album);\n      const albumData = { ...initialState };\n      for (const key in album) {\n        if (key in albumData) albumData[key] = album[key];\n      }\n      setFormData({ ...albumData, artist_name: album.artist.name });\n      //console.log('Albumform:fetchAlbumById:', album, album.artist.name);\n      //console.log('formData', formData);\n    }\n  }, [loading_album, album, getAlbumById, match.params.id]);\n\n  useEffect(() => {\n    if (match.params.id) {\n      fetchAlbumById();\n    }\n  }, [match.params.id, fetchAlbumById]);\n\n  //const fetchPokemon = useCallback(() => {});\n\n  const fetchArtists = useCallback(() => {\n    getArtists(1, 100);\n  }, [getArtists]);\n\n  useEffect(() => {\n    fetchArtists();\n  }, [fetchArtists]);\n\n  const { album_title, year, condition, artist_name } = formData;\n\n  const onChange = (e) => {\n    //console.log('onchange', e.target.name, e.target.value);\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    //console.log(formData);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //console.log('submit');\n    //console.log(formData);\n\n    updateAlbum(match.params.id, formData, history, album ? true : false);\n  };\n\n  return (\n    <Fragment>\n      {loading_album && loading_artists ? (\n        <p>Loading edit album form...</p>\n      ) : (\n        <Fragment>\n          <h1>Edit Album details</h1>\n          <form onSubmit={onSubmit}>\n            <div>\n              <label htmlFor='album_title'>Album Title</label>\n              <input\n                type='text'\n                placeholder='Album Title'\n                name='album_title'\n                value={album_title}\n                onChange={onChange}\n              />\n            </div>\n            <div>\n              <label htmlFor='condition'>Condition</label>\n              <input\n                type='text'\n                placeholder='Condition'\n                name='condition'\n                value={condition}\n                onChange={onChange}\n              />\n            </div>\n            <div>\n              <label htmlFor='year'>Year</label>\n              <input\n                type='text'\n                placeholder='Year'\n                name='year'\n                value={year}\n                onChange={onChange}\n              />\n            </div>\n            <div>\n              <label htmlFor='artist_name'>Artist</label>\n              <select\n                id='artist_name'\n                name='artist_name'\n                value={artist_name}\n                onChange={onChange}\n              >\n                {artists.map((artist) => {\n                  return (\n                    <option key={artist.name} value={artist.name}>\n                      {artist.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <input type='submit' />\n          </form>\n          <Link to='/'>Go Back to Albums</Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  state_album: state.album,\n  state_artist: state.artist,\n});\n\nexport default connect(mapStateToProps, {\n  getAlbumById,\n  updateAlbum,\n  getArtists,\n})(AlbumForm2);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getArtists, updateArtist } from './actions/artist';\nimport { Link } from 'react-router-dom';\n\nconst initialState = {\n  artist_id: '',\n  new_artist_name: '',\n};\n\nconst ArtistForm = ({\n  getArtists,\n  updateArtist,\n  state_artist: { loading_artists, artists },\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n  const { artist_id, new_artist_name } = formData;\n\n  useEffect(() => {\n    //   updateArtistId();\n    if (!loading_artists && artists.length > 0) {\n      if (artist_id !== artists[0]._id) {\n        setFormData({ ...formData, artist_id: artists[0]._id });\n      }\n    }\n  }, [loading_artists, artists, artist_id, formData]);\n\n  useEffect(() => {\n    getArtists(1, 100);\n  }, [getArtists]);\n\n  const onChange = (e) => {\n    //console.log('onchange', e.target.name, e.target.value);\n    setFormData(() => {\n      return { ...formData, [e.target.name]: e.target.value };\n    });\n    //console.log(formData);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //console.log('submit');\n    //console.log(formData);\n    updateArtist(artist_id, new_artist_name, history, true);\n  };\n  //console.log('ArtistForm', artists);\n\n  return (\n    <Fragment>\n      {loading_artists && artists.length > 0 ? (\n        <p>Loading edit artist form...</p>\n      ) : (\n        <Fragment>\n          <h1>Edit Artists</h1>\n          <h2>Select Artist Name and update with new one</h2>\n          <form onSubmit={onSubmit}>\n            <div>\n              <label htmlFor='artist_id'>Current Artist Name</label>\n              <select\n                id='artist_id'\n                name='artist_id'\n                value={artist_id}\n                onChange={onChange}\n                required\n              >\n                {artists.map((artist) => {\n                  return (\n                    <option key={artist.name} value={artist._id}>\n                      {artist.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <div>\n              <label htmlFor='new_artist_name'>New Artist Name</label>\n              <input\n                type='text'\n                placeholder='new_artist_name'\n                name='new_artist_name'\n                value={new_artist_name}\n                onChange={onChange}\n                required\n              />\n            </div>\n            <input type='submit' />\n          </form>\n          <Link to='/'>Go Back to Albums</Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  state_artist: state.artist,\n});\n\nexport default connect(mapStateToProps, {\n  getArtists,\n  updateArtist,\n})(ArtistForm);\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Albums from './Albums';\nimport AlbumForm2 from './AlbumForm2';\nimport ArtistForm from './ArtistForm';\nimport { CLEAR_ARTISTS } from './actions/types';\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch({ type: CLEAR_ARTISTS });\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path='/edit-album/:id' component={AlbumForm2} />\n          <Route exact path='/edit-album/' component={AlbumForm2} />\n          <Route exact path='/edit-artist/' component={ArtistForm} />\n          <Route exact path='/' component={Albums} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}